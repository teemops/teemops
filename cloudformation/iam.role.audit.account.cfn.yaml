## Template for IAM Role for Cloud Auditing
AWSTemplateFormatVersion: "2010-09-09"
Description: "IAM role for an account to be accessed by Audit AWS Auditing Account"
Parameters:
  # Parent AWS Account
  ParentAWSAccountId:
    Type: String
    Description: "The AWS Account ID of tops cloud service"
    AllowedPattern: "[0-9]{12}"
    MinLength: 12
    MaxLength: 12
    Default: "660228977852"
  AuditAWSAccountId:
    Type: String
    Description: "The AWS Account ID of CE MFA Access for ReportsAccess and Configuration"
    AllowedPattern: "[0-9]{12}"
    MinLength: 12
    MaxLength: 12
    Default: "660228977852"
  ExternalId:
    Type: String
    Description: "External STS ID DO NOT CHANGE"
    AllowedPattern: "[a-zA-Z0-9]*"
    MinLength: 10
    MaxLength: 200
  UniqueId:
    Type: String
    Description: "Unique GUID DO NOT CHANGE"
    AllowedPattern: "[a-zA-Z0-9-]*"
    MinLength: 10
    MaxLength: 200
Resources:
  TopsCustomNotifier:
    Type: Custom::TeemopsPingSNS
    Version: 1.0
    Properties:
      ServiceToken: !Join
        - ""
        - - "arn:aws:sns:"
          - !Ref "AWS::Region"
          - ":"
          - !Ref ParentAWSAccountId
          - ":teemops-sns"
      TopsRoleArn: !GetAtt
        - TopsAuditSetup
        - Arn
      TopsExternalId: !Ref ExternalId
      TopsUniqueId: !Ref UniqueId
      TopsType: "audit"
  TopsCWEventRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "events.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - "Events:PutEvents"
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:events:*:"
                      - !Ref ParentAWSAccountId
                      - ":event-bus/default"
          PolicyName: CWPutEventsTeemOpsPolicy
  # Auditing Read-Only
  TopsAuditSetup:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/ReadOnlyAccess"
        - "arn:aws:iam::aws:policy/ResourceGroupsandTagEditorReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Ref AuditAWSAccountId
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              AWS: !Ref ParentAWSAccountId
            Condition:
              StringEquals:
                "sts:ExternalId": !Ref ExternalId
  #allow ability to passrole to another role
  PassRole:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsPassRole"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource: "arn:aws:iam::*:role/tops*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create an S3 bucket for Config delivery
  S3Bucket:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsS3Bucket"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "s3:CreateBucket"
              - "s3:DeleteBucket"
              - "s3:ListAllMyBuckets"
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
            Resource: "arn:aws:s3:::tops-config-*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create a KMS key
  KMSKey:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsKMSKey"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "kms:CreateKey"
              - "kms:DeleteKey"
              - "kms:DescribeKey"
              - "kms:EnableKey"
              - "kms:DisableKey"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
              - "kms:PutKeyPolicy"
              - "kms:TagResource"
              - "kms:UntagResource"
              - "kms:CreateAlias"
            Resource: "arn:aws:kms:*:*:key/*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create, update and delete cloudformation stacks
  CloudFormationAccess:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsCloudFormationAccess"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "cloudformation:CreateStack"
              - "cloudformation:DeleteStack"
              - "cloudformation:DescribeStacks"
              - "cloudformation:UpdateStack"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:ListChangeSets"
              - "cloudformation:ListStacks"
              - "cloudformation:ListStackResources"
            Resource: "arn:aws:cloudformation:*:*:stack/tops*"
      Roles:
        - !Ref TopsAuditSetup
  CloudFormationListAccess:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsCloudFormationListAccess"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "cloudformation:ListStacks"
              - "cloudformation:ListStackResources"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create a CloudTrail trail
  CloudTrailTrail:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsCloudTrailTrail"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "cloudtrail:CreateTrail"
              - "cloudtrail:DeleteTrail"
              - "cloudtrail:DescribeTrails"
              - "cloudtrail:UpdateTrail"
              - "cloudtrail:StartLogging"
              - "cloudtrail:StopLogging"
              - "cloudtrail:GetTrailStatus"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create a CloudWatch log group
  CloudWatchLogGroup:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsCloudWatchLogGroup"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:DeleteLogGroup"
              - "logs:DescribeLogGroups"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create a CloudWatch log stream
  CloudWatchLogStream:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsCloudWatchLogStream"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "logs:CreateLogStream"
              - "logs:DeleteLogStream"
              - "logs:DescribeLogStreams"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create a CloudWatch log event
  CloudWatchLogEvent:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsCloudWatchLogEvent"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "logs:PutLogEvents"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create a CloudWatch log metric filter
  CloudWatchLogMetricFilter:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsCloudWatchLogMetricFilter"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "logs:PutMetricFilter"
              - "logs:DeleteMetricFilter"
              - "logs:DescribeMetricFilters"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config rules
  ConfigRule:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigRule"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:PutConfigRule"
              - "config:DeleteConfigRule"
              - "config:DescribeConfigRules"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config configuration recorders
  ConfigConfigurationRecorder:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigConfigurationRecorder"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:PutConfigurationRecorder"
              - "config:DeleteConfigurationRecorder"
              - "config:DescribeConfigurationRecorders"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config delivery channels
  ConfigDeliveryChannel:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigDeliveryChannel"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:PutDeliveryChannel"
              - "config:DeleteDeliveryChannel"
              - "config:DescribeDeliveryChannels"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config configuration aggregators
  ConfigConfigurationAggregator:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigConfigurationAggregator"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:PutConfigurationAggregator"
              - "config:DeleteConfigurationAggregator"
              - "config:DescribeConfigurationAggregators"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config configuration snapshots
  ConfigConfigurationSnapshot:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigConfigurationSnapshot"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:StartConfigurationRecorder"
              - "config:StopConfigurationRecorder"
              - "config:DescribeConfigurationRecorderStatus"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config conformance packs
  ConfigConformancePack:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigConformancePack"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:PutConformancePack"
              - "config:DeleteConformancePack"
              - "config:DescribeConformancePacks"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config remediation configurations
  ConfigRemediationConfiguration:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigRemediationConfiguration"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:PutRemediationConfigurations"
              - "config:DeleteRemediationConfigurations"
              - "config:DescribeRemediationConfigurations"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to create config remediation exceptions
  ConfigRemediationExceptions:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigRemediationExceptions"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "config:PutRemediationExceptions"
              - "config:DeleteRemediationExceptions"
              - "config:DescribeRemediationExceptions"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to manage security hub
  SecurityHub:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsSecurityHub"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "securityhub:*"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to manage guard duty
  GuardDuty:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsGuardDuty"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "guardduty:*"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to manage macie
  Macie:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsMacie"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "macie:*"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #allow ability to manage inspector
  Inspector:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsInspector"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "inspector:*"
            Resource: "*"
      Roles:
        - !Ref TopsAuditSetup
  #create service linkedrole for config
  ConfigServiceLinkedRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "tops-config-role"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "config.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole"
  ConfigServiceLinkedRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "TopsConfigServiceLinkedRolePolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # - Effect: "Allow"
          #   Action:
          #     - "kms:Decrypt"
          #     - "kms:GenerateDataKey"
          #   Resource: !Ref s3configKey
          - Effect: Allow
            Action:
              - "s3:*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref TopsAuditS3Bucket
                - /*
          - Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref TopsAuditS3Bucket
                - /AWSLogs/
                - !Ref "AWS::AccountId"
                - /*
          - Effect: Allow
            Action:
              - "s3:*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref TopsAuditS3Bucket
      Roles:
        - !Ref ConfigServiceLinkedRole
  ConfigAggregatorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "tops-config-aggregrator-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations
  # KMS S3 Config Service encryption key
  s3configKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3config
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"
  s3configKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/tops-audit
      TargetKeyId:
        Ref: s3configKey

  # Build AWS Config Service S3 Bucket for Storage
  TopsAuditS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Join
        - "-"
        - - "tops-config-audit"
          - !Select [2, !Split ["/", !Ref AWS::StackId]]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      # BucketEncryption:
      #   ServerSideEncryptionConfiguration:
      #     - ServerSideEncryptionByDefault:
      #         KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${s3configKeyAlias}"
      #         SSEAlgorithm: "aws:kms"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: "AWSConfigBucketRule"
            Status: Enabled
            Prefix: AWSLogs/
            ExpirationInDays: 365
  TopsAuditS3ConfigPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: TopsAuditS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowMFADeleteOnly
            Effect: Deny
            Principal: "*"
            Action: "s3:DeleteBucket"
            Resource:
              - !Sub "arn:aws:s3:::${TopsAuditS3Bucket}"
            Condition:
              Bool:
                "aws:MultiFactorAuthPresent": false
          - Sid: AWSConfigBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource:
              - !Sub "arn:aws:s3:::${TopsAuditS3Bucket}"
            # Condition:
            #   StringEquals:
            #     "AWS:SourceAccount":
            #       - !Ref "AWS::AccountId"
          - Sid: AWSConfigBucketAccessCheck
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${TopsAuditS3Bucket}"
            # Condition:
            #   StringEquals:
            #     "AWS:SourceAccount":
            #       - !Ref "AWS::AccountId"
          - Sid: AWSConfigBucketDelivery
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${TopsAuditS3Bucket}/AWSLogs/${AWS::AccountId}/Config/*"
            # Condition:
            #   StringEquals:
            #     "AWS:SourceAccount":
            #       - !Ref "AWS::AccountId"
            #     "s3:x-amz-acl": bucket-owner-full-control

Outputs:
  RoleArn:
    Description: "The ARN of the role"
    Value: !GetAtt
      - TopsAuditSetup
      - Arn
  RoleName:
    Description: "The name of the role"
    Value: !Ref TopsAuditSetup
  S3Bucket:
    Description: "The ARN of the S3 bucket"
    Value: !GetAtt
      - TopsAuditS3Bucket
      - Arn
