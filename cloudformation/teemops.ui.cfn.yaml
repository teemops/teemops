AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  License: Apache-2.0
Description: "Teemops UI CloudFormation template"
Parameters:
  HostedZone:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  SSLArn:
    Type: String
# Mappings:
#   Region2S3WebsiteSuffix:
#     us-east-1:
#       Suffix: .s3-website-us-east-1.amazonaws.com
#     us-west-1:
#       Suffix: .s3-website-us-west-1.amazonaws.com
#     us-west-2:
#       Suffix: .s3-website-us-west-2.amazonaws.com
#     eu-west-1:
#       Suffix: .s3-website-eu-west-1.amazonaws.com
#     ap-northeast-1:
#       Suffix: .s3-website-ap-northeast-1.amazonaws.com
#     ap-northeast-2:
#       Suffix: .s3-website-ap-northeast-2.amazonaws.com
#     ap-southeast-1:
#       Suffix: .s3-website-ap-southeast-1.amazonaws.com
#     ap-southeast-2:
#       Suffix: .s3-website-ap-southeast-2.amazonaws.com
#     ap-south-1:
#       Suffix: .s3-website-ap-south-1.amazonaws.com
#     us-east-2:
#       Suffix: .s3-website-us-east-2.amazonaws.com
#     sa-east-1:
#       Suffix: .s3-website-sa-east-1.amazonaws.com
#     cn-north-1:
#       Suffix: .s3-website.cn-north-1.amazonaws.com.cn
#     eu-central-1:
#       Suffix: .s3-website.eu-central-1.amazonaws.com
Resources:
  TopsOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: OAC for S3 bucket and CloudFront distribution
        # Get a unique ID for the OAC Config name.
        # Name must be unique within account
        Name: !Sub
          - tops-secure-origin-${guid}
          - guid: !Select [2, !Split ["/", !Ref "AWS::StackId"]]
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  TopsS3BucketLogs:
    Type: AWS::S3::Bucket
    Properties:
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  TopsS3BucketForWebsiteContent:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref "TopsS3BucketLogs"
        LogFilePrefix: "origin/"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  TopsS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref "TopsS3BucketForWebsiteContent"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: s3:GetObject
            Principal:
              Service: "cloudfront.amazonaws.com"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${TopsS3BucketForWebsiteContent}/*"
            Condition:
              StringLike:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${TopsWebsiteCDN}"
  TopsWebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CDN for Tops UI
        Aliases:
          - !Ref "HostedZone"
        Enabled: "true"
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: "true"
          MaxTTL: 31536000
          TargetOriginId: only-origin
          ViewerProtocolPolicy: "redirect-to-https"
        DefaultRootObject: index.html
        Logging:
          Bucket: !GetAtt TopsS3BucketLogs.DomainName
          IncludeCookies: false
          Prefix: "cdn/"
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLArn
          SslSupportMethod: sni-only
        Origins:
          - Id: only-origin
            S3OriginConfig: {}
            # CustomOriginConfig:
            #   HTTPPort: "80"
            #   HTTPSPort: "443"
            #   OriginProtocolPolicy: http-only
            OriginAccessControlId: !Ref TopsOriginAccessControl
            DomainName: !GetAtt TopsS3BucketForWebsiteContent.DomainName
            # DomainName:
            #   !Join [
            #     "",
            #     [
            #       !Ref "TopsS3BucketForWebsiteContent",
            #       !FindInMap [
            #         Region2S3WebsiteSuffix,
            #         !Ref "AWS::Region",
            #         Suffix,
            #       ],
            #     ],
            #   ]
  TopsWebsiteDNSName:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Join ["", [!Ref "HostedZone", .]]
      Comment: CNAME redirect custom name to CloudFront distribution
      Name:
        !Join [
          "",
          [
            !Ref "AWS::StackName",
            !Ref "AWS::AccountId",
            .,
            !Ref "AWS::Region",
            .,
            !Ref "HostedZone",
          ],
        ]
      Type: CNAME
      TTL: "900"
      ResourceRecords:
        - !GetAtt [TopsWebsiteCDN, DomainName]
Outputs:
  WebsiteURL:
    Value: !Join ["", ["http://", !Ref "TopsWebsiteDNSName"]]
    Description: The URL of the newly created website
  BucketName:
    Value: !Ref "TopsS3BucketForWebsiteContent"
    Description: Name of S3 bucket to hold website content
  CloudFrontDistributionId:
    Value: !Ref "TopsWebsiteCDN"
    Description: ID of CloudFront distribution
